name: husarion-depthai
adopt-info: husarion-depthai
license: Apache-2.0
summary: OAK-x cameras driver for Husarion robots
icon: snap/gui/icon.png
description: |
  The `husarion-depthai` snap contains all the necessary software to bring the OAK-x cameras up.
  
  **Parameters**

  The snap provides the following configurable parameters (`param name`: `default value`):

  * `driver`: `{...}`
  * `ros`: `{...}`

  The `ros` contains the following keys:

  * `ros.domain-id`: `0` - Sets the `ROS_DOMAIN_ID` environment variable for the ROS driver.
  * `ros.localhost-only`: `0` - Sets the `ROS_LOCALHOST_ONLY` environment variable for the ROS driver.
  * `ros.transport`: `udp` - Configures DDS transport. Options are `udp`, `shm`, `builtin` (or `rmw_fastrtps_cpp`), `rmw_cyclonedds_cpp`. Corresponding DDS XML files can be found in the `/var/snap/husarion-depthai/common` directory (custom FastDDS setups can also be created here).
  * `ros.namespace`: `(unset)` - Namespace for all topics and transforms.

  The `driver` contains the following keys:

  * name: `oak`
  * parent-frame: `oak-d-base-frame`
  * camera-model: `OAK-D`
  * cam-pos-x: `0.0`
  * cam-pos-y: `0.0`
  * cam-pos-z: `0.0`
  * cam-roll: `0.0`
  * cam-pitch: `0.0`
  * cam-yaw: `0.0`
  * params-file: `$SNAP_COMMON/depthai_params.yaml`
  * ffmpeg-image-transport.encoding: `libx264`
  * ffmpeg-image-transport.preset: `ultrafast`
  * ffmpeg-image-transport.tune: `zerolatency`

  To set the parameters, use the snap set command, e.g.,

     snap set husarion-depthai driver.namespace=robot

  Default values for `ffmpeg-image-transport`:

  * encoding: `libx264`
  * preset: `ultrafast`
  * tune: `zerolatency`

grade: stable
confinement: strict
base: core22

contact: https://github.com/husarion/depthai-snap/issues
issues: https://github.com/husarion/depthai-snap/issues
website: https://husarion.com/

architectures:
  - build-on: amd64
    build-for: amd64
  # - build-on: amd64
  #   build-for: arm64
  - build-on: arm64
    build-for: arm64

slots:
  shm-slot:
    interface: shared-memory
    write: ['*'] # paths are relative to /dev/shm
  # c189-slot:
  #   interface: custom-device
  #   custom-device: c189
  #   files:
  #     write:
  #       - /run/udev/data/c189:*

plugs:
  shm-plug:
    interface: shared-memory
    shared-memory: shm-slot
    private: false

  # c189-plug:
  #   interface: custom-device
  #   custom-device: c189

apps:

  daemon:
    command: usr/bin/launcher.sh
    command-chain: [usr/bin/ros_setup.sh]
    daemon: simple
    install-mode: enable
    plugs: [network, network-bind, shm-plug, raw-usb]
    slots: [shm-slot]
    extensions: [ros2-humble-ros-base]

  husarion-depthai:
    command: usr/bin/launcher.sh
    command-chain: [usr/bin/check_daemon_running.sh, usr/bin/ros_setup.sh]
    plugs: [network, network-bind, shm-plug, raw-usb]
    # plugs: [network, network-bind, shm-plug, raw-usb, system-observe, hardware-observe, network-control, network-observe, camera, browser-support]
    # block-devices, 
    slots: [shm-slot]
    extensions: [ros2-humble-ros-base]

  start:
    command: usr/bin/start_launcher.sh

  stop:
    command: usr/bin/stop_launcher.sh

  image-view:
    command: usr/bin/image_view_launcher.sh
    command-chain: [usr/bin/ros_setup.sh]
    plugs: [network, network-bind, shm-plug, desktop, desktop-legacy, wayland, unity7, opengl]
    slots: [shm-slot]
    extensions: [ros2-humble-ros-base]

parts:

  husarion-depthai:
    plugin: nil
    stage-packages:
      - ros-humble-depthai-ros
      - ros-humble-image-transport
      - ros-humble-image-transport-plugins
      # https://index.ros.org/p/ffmpeg_image_transport/github-ros-misc-utilities-ffmpeg_image_transport/#humble
      - ros-humble-ffmpeg-image-transport
      - ffmpeg
      - ros-humble-cv-bridge
      # needed to run ffmpeg without errors:
      - libpulse-dev
      - libblas3
      - libjpeg-turbo8-dev
    override-stage: |
      craftctl default
      version="$(apt-cache policy ros-humble-depthai-ros-driver | grep Candidate | awk '{print $2}')"
      craftctl set version="$version"
      craftctl set grade="stable"

  image-view:
    plugin: nil
    stage-packages:
      - ros-humble-image-view
      - libcanberra-gtk-module 
      - libcanberra-gtk3-module
      - libglu1-mesa

  yq:
    plugin: nil
    override-build: |
      craftctl default

      YQ_VERSION="v4.35.1"
      TARGETARCH=$CRAFT_ARCH_BUILD_FOR
      curl -L "https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_${TARGETARCH}" -o $CRAFT_PART_BUILD/yq
    override-prime: |
      craftctl default
    
      cp $CRAFT_PART_BUILD/yq $CRAFT_PRIME/usr/bin/yq
      chmod +x $CRAFT_PRIME/usr/bin/yq
    build-packages:
      - curl

  # copy local scripts to the snap usr/bin
  local-files-ros:
    plugin: dump
    source: snap/local/local-ros/
    organize:
      '*.sh': usr/bin/
      '*.xml': usr/share/husarion-depthai/config/
      'ros.env': usr/share/husarion-depthai/config/

  local-files:
    plugin: dump
    source: snap/local/
    organize:
      '*.sh': usr/bin/
      '*.py': usr/bin/
      '*.yaml': usr/share/husarion-depthai/config/
      # '*.xml': usr/share/husarion-depthai/config/
      # '*.json': usr/share/husarion-depthai/config/
